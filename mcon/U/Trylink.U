?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?X:
?X: This unit tries to compile and link a test program.
?X:
?X: To use it, put the program to compile in try.c, then say:
?X: set d_func [optional cc flags to try in sequence]
?X: eval $trylink
?X:
?X: A log of all attempts is kept in the trylink.log file, within the UU
?X: directory (where Configure runs).  This directory is only cleaned-up
?X: at the end of the Configure run, so do not supply -e to Configure in order
?X: to stop after the production of the config.sh file.
?X:
?MAKE:Trylink: Setvar Oldconfig cat rm test +cc +ccflags +ldflags
?MAKE:	-pick add $@ %<
?LINT:define trylink
?V:trylink
?S:trylink:
?S:	This shell variable is used internally by Configure to check
?S:	wether a given function is defined or not. A typical use is:
?S:		create try.c
?S:		set d_func [optional cc flags to try in sequence]
?S:		eval $trylink
?S:	That will print a message, saying wether function was found or
?S:	not and set d_func accordingly.
?S:.
?T:var file val nparams
: see whether the try.c file compiles and links
trylink='
var=$1;
shift;
val=$undef;
file=trylink.log;
nparams=$#;
echo "--- $var ---" >> "$file";
$cat try.c >> "$file";
while :; do
	if $cc $ccflags -o try try.c $ldflags $1 >> "$file" 2>&1; then
		case "$nparams" in 0) ;; *) echo "==> OK with \"$1\"" >> "$file";; esac;
		val=$define;
		break;
	fi;
	if $test $# -lt 1; then
		break;
	fi;
	echo "==> FAILED with \"$1\"" >> "$file";
	shift;
done;
$rm -rf try try.*;
echo "==> $var=$val" >> "$file";
set $var; eval $setvar;
'

