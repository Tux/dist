?RCS: $Id: d_poll.U 40 2010-11-27 20:54:48Z rmanfredi $
?RCS:
?RCS: Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?MAKE:d_WSAPoll: Trylink cat
?MAKE:	-pick add $@ %<
?S:d_WSAPoll:
?S:	This variable conditionally defines the HAS_WSAPOLL symbol, which
?S:	indicates to the C program that the WSAPoll() routine is available
?S:	to poll active file descriptors.
?S:.
?C:HAS_WSAPOLL :
?C:	This symbol, if defined, indicates that the WSAPoll() routine is
?C:	available to poll active file descriptors. 
?C:.
?H:#$d_WSAPoll HAS_WSAPOLL		/**/
?H:.
?LINT:set d_WSAPoll
: see if WSAPoll exists
$cat >try.c <<EOC
#include <sys/types.h>
#include <Winsock2.h>
int main(void)
{
	static int ret, timeout;
	static unsigned n;
	static struct pollfd pfd;
	pfd.fd |= 1;
	pfd.revents |= 1;
	pfd.events |= POLLIN;
	pfd.events |= POLLOUT;
	pfd.events |= POLLPRI;
	pfd.events |= POLLERR;
	pfd.events |= POLLHUP;
	pfd.events |= POLLNVAL;
	ret |= WSAPoll(&pfd, n, timeout);
	return ret ? 0 : 1;
}
EOC
cyn=WSAPoll
set d_WSAPoll
eval $trylink

