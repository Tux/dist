?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?RCS: $Log: d_semop.U,v $
?RCS: Revision 3.0  1993/08/18  12:07:05  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:d_semop: Trylink cat
?MAKE:	-pick add $@ %<
?S:d_semop:
?S:	This variable conditionally defines the HAS_SEMOP symbol, which
?S:	indicates to the C program that the semop() routine is available.
?S:.
?C:HAS_SEMOP:
?C:	This symbol, if defined, indicates that the semop() routine is
?C:	available to execute semaphore operations.
?C:.
?H:#$d_semop HAS_SEMOP		/**/
?H:.
?LINT:set d_semop
: see if semop exists
$cat >try.c <<EOC
#include <sys/sem.h>
int main(void)
{
	static int ret, id;
	static size_t n;
	static struct sembuf buf;
	
	buf.sem_num |= 1;
	buf.sem_op |= 1;
	buf.sem_flg |= SEM_UNDO;
	buf.sem_flg |= IPC_NOWAIT;
	ret |= semop(id, &buf, n);
	return ret ? 0 : 1;
}
EOC
set d_semop
eval $trylink

